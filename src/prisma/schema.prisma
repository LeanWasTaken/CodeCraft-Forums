generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Define the model for users
model Users {
  id          String    @id @default(uuid())
  fullname    String
  username    String    @unique
  email       String    @unique
  password    String
  createdAt   DateTime  @default(now())
  // Define a relation to posts created by the user
  posts       Posts[]
  // Define a relation to comments created by the user
  comments    Comments[]
}

// Define the model for topics
model Topics {
  id          String    @id @default(uuid())
  name        String    @unique
  createdAt   DateTime  @default(now())
  // Define a relation to posts under this topic
  posts       Posts[]
}

// Define the model for posts
model Posts {
  id          String    @id @default(uuid())
  title       String
  content     String
  type        PostType  // Enum representing different post types
  createdAt   DateTime  @default(now())
  // Define a relation to the user who created the post
  author      Users      @relation(fields: [authorId], references: [id])
  authorId    String
  // Define a relation to the topic this post belongs to
  topic       Topics     @relation(fields: [topicId], references: [id])
  topicId     String
  // Define a relation to comments under this post
  comments    Comments[]
}

// Define the model for comments
model Comments {
  id          String    @id @default(uuid())
  content     String
  type        CommentType  // Enum representing different comment types
  createdAt   DateTime  @default(now())
  // Define a relation to the user who created the comment
  author      Users      @relation(fields: [authorId], references: [id])
  authorId    String
  // Define a relation to the post this comment belongs to
  post        Posts      @relation(fields: [postId], references: [id])
  postId      String
  // Define a relation to replies (sub-comments) under this comment
  replies     Comments[] @relation("ReplyTo")
  // Define a relation to the parent comment if this comment is a reply
  parent      Comments?  @relation("ReplyTo", fields: [parentId], references: [id])
  parentId    String?
}

// Enum for representing different types of posts
enum PostType {
  TEXT
  IMAGE
  CODE
  TEXT_WITH_IMAGE
  TEXT_WITH_CODE
}

// Enum for representing different types of comments
enum CommentType {
  TEXT
  IMAGE
  CODE
}
